<controls:MetroWindow x:Class="NoteTaker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:vm="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ignore="http://www.ignore.com"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"                
        xmlns:helpers="clr-namespace:NoteTaker.Helpers"
        xmlns:mvvmcmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras"
        xmlns:UserControls="clr-namespace:NoteTaker.UserControls"
        xmlns:Properties="clr-namespace:NoteTaker.Properties" 
        mc:Ignorable="d ignore"
        Height="500.3"
        Width="722"
        
        DataContext="{Binding Main, Source={StaticResource Locator}}" SaveWindowPosition="True" Margin="0"
        ShowWindowCommandsOnTop="True"
                      >
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="EditableTabHeaderControl" 
	TargetType="{x:Type helpers:EditableTabHeaderControl}">
                <!-- The template specified earlier will come here !-->
            </Style>
            <Style x:Key="ItemContainerStyle" TargetType="TabItem">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <helpers:EditableTabHeaderControl
                   Style="{StaticResource EditableTabHeaderControl}">
                                <helpers:EditableTabHeaderControl.Content>
                                    <Binding Path="Name" Mode="TwoWay"/>
                                </helpers:EditableTabHeaderControl.Content>
                            </helpers:EditableTabHeaderControl>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FontAwesome">
                <Setter Property="TextElement.FontFamily" Value="pack://application:,,,/Resources/#FontAwesome" />
            </Style>
            <Style x:Key="EditableLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Grid>
                                <TextBox Name="textBox"
                                     Grid.ZIndex="1"
                                     Padding="1,3,0,0"
                                     Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type Label}}, Path=Content, UpdateSourceTrigger=PropertyChanged}"
                                     Opacity="0"/>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>

                                <EventTrigger RoutedEvent="MouseDoubleClick">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames                                          
                                                Storyboard.TargetName="textBox" Storyboard.TargetProperty="(TextBox.Opacity)">
                                                <DiscreteDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="LostFocus">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames                                          
                                                Storyboard.TargetName="textBox" Storyboard.TargetProperty="(TextBox.Opacity)">
                                                <DiscreteDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <!--<Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="textBox" Property="Opacity" Value="1"/>
                                </Trigger>-->
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <BooleanToVisibilityConverter x:Key="visibilityConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Name="SettingsFlyout" Header="Settings" Position="Right" Width="200" Theme="Accent" IsOpen="False">
                <Grid>
                               
                    <controls:ToggleSwitch Header="QuickNote" IsChecked="{Binding Source={x:Static Properties:Settings.Default}, Path=QuickNotes, Mode=TwoWay,Converter={StaticResource visibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                    <controls:ToggleSwitch Header="QuickNote" IsChecked="{Binding Source={x:Static Properties:Settings.Default}, Path=QuickNotes, Mode=TwoWay,Converter={StaticResource visibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                
                </Grid>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <Grid x:Name="LayoutRoot" Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TabControl Name ="Tabs" Padding="0" ItemsSource="{Binding Notes}" SelectedItem="{Binding SelectedNote}" MinWidth="410" MinHeight="200" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0" Grid.RowSpan="2">
            <TabControl.ItemTemplate>

                <DataTemplate>
                    <UserControls:EditableTextBlockUC
               Text="{Binding Title, Mode=TwoWay}"
                />
                    <!--<DockPanel Width="Auto" Margin="0">                       
                        <Button Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.CloseNoteCommand}"
                            Content="X"
                            DockPanel.Dock="Right"
                            Focusable="False"
                            FontWeight="Bold"  
                            Margin="0,1,0,0"
                            Padding="0"
                            VerticalContentAlignment="Center"
                            Width="15" Height="15" 
                            BorderThickness="0"
                            FontFamily="../Resources/fontawesome-webfont.ttf#FontAwesome"                          
                            >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn= "{ StaticResource {x:Type Button}}">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DockPanel}},Path=IsMouseOver}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        -->
                    <!--<Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="RosyBrown"/>
                                            Does not work with current button style
                                        </Trigger>-->
                    <!--
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <TextBlock Text="{Binding Title}" FontSize="14" VerticalAlignment="Center" Margin="0">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True">
                                            <Setter Property="Foreground" Value="#CC119EDA"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="False">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>                                       
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DockPanel>-->
                </DataTemplate>
            </TabControl.ItemTemplate>

            <TabControl.ContentTemplate>
                <DataTemplate>

                    <UserControls:Note Margin="0"/>

                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
        <!--<ToolBarPanel HorizontalAlignment="Left" Height="27" VerticalAlignment="Top" Width="213">
            <ToolBar Grid.Row="0" HorizontalAlignment="Left" Width="583" Margin="0,0,-370,0" FontFamily ="pack://application:,,,/Resources/#FontAwesome">
                <Button Content="&#xf067;" Height="26" Width="26" Command="{Binding NewNoteCommand}" Margin="0,0,0,0" FontSize="21" Padding="0" VerticalAlignment="Center"/>
                <Button Content="&#xf013;" Height="26" Width="26" Click="Settings_Click"  Margin="0,0,0,0" FontSize="21" Padding="0" VerticalAlignment="Center"/>
                <Button Content="&#xf1bb;" Height="26" Width="26" Command="{Binding QuickNoteToggleCommand}" Margin="0,0,0,0" FontSize="21" Padding="0" VerticalAlignment="Center"/>
            </ToolBar>
        </ToolBarPanel>-->

    </Grid>
    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands FontFamily ="pack://application:,,,/Resources/#FontAwesome" HorizontalAlignment="Left">
            <Button Content="&#xf067;" Command="{Binding NewNoteCommand}" Margin="0,0,0,0" FontSize="21" Padding="0" VerticalAlignment="Center"/>
            <Button Content="&#xf1bb;" Command="{Binding QuickNoteToggleCommand}" Margin="0,0,0,0" FontSize="21" Padding="0" VerticalAlignment="Center"/>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>

    <controls:MetroWindow.WindowCommands>
        <controls:WindowCommands FontFamily ="pack://application:,,,/Resources/#FontAwesome" HorizontalAlignment="Left">
            <Button Content="&#xf013;" Click="Settings_Click"  Margin="0,0,0,0" FontSize="21" Padding="0" VerticalAlignment="Center" ToolTip="{Binding WindowTitle}"/>
        </controls:WindowCommands>
    </controls:MetroWindow.WindowCommands>

</controls:MetroWindow>
