<UserControl x:Class="Scrivener.UserControls.SettingsUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Properties="clr-namespace:Scrivener.Properties"
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:MahControls="clr-namespace:MahApps.Metro;assembly=MahApps.Metro"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"  
             d:DesignHeight="300" d:DesignWidth="300"
             Width="auto" Height="auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
             >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Medium"/>
            </Style>

            <!--<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>

            </Style>-->
            <Style BasedOn="{StaticResource MetroTabItem}" TargetType="{x:Type TabItem}">
                <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="16"></Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="0,-50,0,0">

        <controls:MetroTabControl TabStripPlacement="Right" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible">
            <controls:MetroTabItem Header="Settings" ScrollViewer.CanContentScroll="True" VerticalAlignment="Top" IsSelected="{Binding SettingsVisibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}">
                <!--<controls:MetroTabItem.ToolTip>
                <ToolTip>
                    <TextBlock TextAlignment="Center">F1</TextBlock>
                </ToolTip>
            </controls:MetroTabItem.ToolTip>-->
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" Width="300" VerticalScrollBarVisibility="Auto" Margin="0,60,0,0">
                    <StackPanel Margin="0" Width="auto">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Label Content="Role" FontSize="15" FontWeight="Medium" Grid.Column="0" Grid.Row="3" Width="auto" Margin="0,5,0,5"/>
                            <ComboBox vm:Name="StupidFuckingComboBox" Height="20" ItemsSource="{Binding RolesView}" DisplayMemberPath="Name"
								SelectedItem="{Binding CurrentRole, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								IsSynchronizedWithCurrentItem="True" Grid.Column="1" Width="auto" Margin="5" Grid.Row="3"
                              />

                        </Grid>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Save Current Template" FontSize="15" FontWeight="Medium" />
                            <Button Content="&#xF0C7;" Background="{vm:Null}" Height="23" Width="23" BorderThickness="0" FontFamily ="pack://application:,,,/Resources/#FontAwesome" Command="{Binding SaveTemplateCommand}"  Margin="15,5,5,0" FontSize="21" Padding="0" VerticalAlignment="Center" ToolTip="Save Template"/>
                        </StackPanel>
                        <controls:ToggleSwitch Header="Close Warning" OnLabel="Enabled" OffLabel="Disable" Margin="5" IsChecked="{Binding Close_Warning, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                        <controls:ToggleSwitch Header="Hyphen in notes" OnLabel="Enabled" OffLabel="Disable" Margin="5" IsChecked="{Binding DashinNotes, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                        <controls:ToggleSwitch Header="Tabs" OnLabel="Enabled" OffLabel="Disable" Margin="5" IsChecked="{Binding TabVisibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                        <Expander Header="Fonts" Margin="0">
                            <Grid Width="auto">
                                <Grid.RowDefinitions >
                                    <RowDefinition/>
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions >
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Note Size" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                                <TextBox BorderThickness="0" Margin="4"
									IsReadOnly="True" Grid.Row="0" Grid.Column="1" Text="{Binding NoteFontSize, Mode=OneWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                <Slider Grid.Row="0" Grid.Column="2" Style="{DynamicResource FlatSlider}" IsSnapToTickEnabled="True" Minimum="10" Maximum="40" TickFrequency="1" Value="{Binding NoteFontSize, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" MinWidth="100" Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                                <Label Content="Tab Size" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                                <TextBox BorderThickness="0" Margin="4"
									IsReadOnly="True" Grid.Row="1" Grid.Column="1" Text="{Binding TabFontSize, Mode=OneWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                <Slider Grid.Row="1" Grid.Column="2" Style="{DynamicResource FlatSlider}" IsSnapToTickEnabled="True" Minimum="10" Maximum="40" TickFrequency="1" Value="{Binding TabFontSize, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" MinWidth="100" Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </Expander>
                        <!--<controls:ToggleSwitch Header="QuickNote" OnLabel="Visible" OffLabel="Hidden" IsChecked="{Binding QuicknoteVisibility, Mode=TwoWay, Converter={StaticResource visibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>-->

                        <!--<controls:ToggleSwitch Header="Minion" OnLabel="Visible" OffLabel="Hidden" IsChecked="{Binding Minion_Visibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}}"/>
                    <controls:ToggleSwitch Header="Note Area" OnLabel="Visible" OffLabel="Hidden" IsChecked="{Binding Note_WorkSpace_Visibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}}"/>-->


                        <Expander Header="Theme" Margin="0">
                            <Grid>
                                <Grid.RowDefinitions >
                                    <RowDefinition/>
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions >
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Content="Theme" Grid.Column="0" Grid.Row="0"/>
                                <ComboBox vm:Name="ThemeBox" Grid.Column="1" Grid.Row="0" Height="20" SelectedItem="{Binding Theme, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}}" SelectionChanged="Theme_SelectionChanged" Width="auto"/>

                                <Label Content="Accent" Grid.Row="1" Grid.Column="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" DisplayMemberPath="Name" vm:Name="AccentBox" Height="20" SelectedIndex="{Binding Accent, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}}" SelectionChanged="Accent_SelectionChanged" Width="auto"/>

                            </Grid>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
            </controls:MetroTabItem>
            <controls:MetroTabItem Header="History" VerticalAlignment="Top" IsSelected="{Binding HistoryVisibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}">
                <!--<controls:MetroTabItem.ToolTip>
                <ToolTip>
                    <TextBlock TextAlignment="Center">Ctrl+H</TextBlock>
                </ToolTip>
            </controls:MetroTabItem.ToolTip>-->
                <ScrollViewer MaxWidth="250" Margin="0,60,0,0" MinWidth="300" >
                    <Grid Width="300" Height="auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="150"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <DatePicker vm:Name="datePicker" Grid.Row="0" Grid.Column="0" SelectedDateFormat="Short" SelectedDate="{Binding HistoryDate}" DisplayDateEnd="{vm:Static sys:DateTime.Now}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedDateChanged">
                                    <i:InvokeCommandAction Command="{Binding HistoryLookupCommand}" CommandParameter="{Binding SelectedDate, ElementName=datePicker}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </DatePicker>
                        <Button Grid.Column="1" Content="Re-Open" Grid.Row="0" IsEnabled="{Binding SelectedItems.Count, ElementName=listView}" Command="{Binding NewNoteCommand}" CommandParameter="{Binding SelectedHistoryNote}" Width="80" HorizontalAlignment="Center" BorderThickness="0" VerticalAlignment="Center"/>
                        <ListView vm:Name="listView" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0" SelectedItem="{Binding SelectedHistoryNote}" ItemsSource="{Binding HistoricNotes}" HorizontalAlignment="Center" Width="160">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <WrapPanel>
                                        <TextBlock Text="{Binding Title}"/>
                                        <TextBlock Text=" "/>
                                        <TextBlock Text="{Binding LastUpdated, StringFormat=T}"/>
                                    </WrapPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding SelectedHistoryNote.Text}" TextWrapping="Wrap"/>
                    </Grid>
                </ScrollViewer>
            </controls:MetroTabItem>
            <controls:MetroTabItem Header="Quick AR" VerticalAlignment="Top" IsSelected="{Binding QuickARVisibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}">
                <Grid MinWidth="300" MaxWidth="300" Margin="0,60,0,0" >
                    <TabControl>
                        <TabItem Header="BreakFix" HorizontalContentAlignment="Left">
                            <ScrollViewer HorizontalAlignment="Left" VerticalAlignment="Top" Height="auto" Width="auto" >
                                <Grid Height="Auto" Width="auto">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Grid.Column="0"  Text="Please replace:" HorizontalAlignment="Center"></TextBlock>
                                    <TextBlock Grid.Row="0" Grid.Column="1"  Text="Scheduled for:" HorizontalAlignment="Center"></TextBlock>
                                    <ListBox Grid.Row="1" Grid.RowSpan="10" Grid.Column="0" vm:Name="bflistbox" Width="150" Height="290" SelectionMode="Multiple" HorizontalAlignment="Center" BorderThickness="0" VerticalContentAlignment="Center" VerticalAlignment="Top">
                                        <ListBoxItem vm:Name="TowerLBI" Content="Tower" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Towervisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="iDeliverEnableClick" Unselected="iDeliverDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="MonitorLBI" Content="Monitor" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Monitorvisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="iDeliverEnableClick" Unselected="iDeliverDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="PrinterLBI" Content="Printer" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Printervisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="iDeliverEnableClick" Unselected="iDeliverDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="KeyboardLBI" Content="Keyboard" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Keyboardvisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="EnabledPeripheralClick" Unselected="PeripheralDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="MouseLBI" Content="Mouse" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Mousevisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="EnabledPeripheralClick" Unselected="PeripheralDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="MousePadLBI" Content="Mouse Pad" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Mousepadvisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="EnabledPeripheralClick" Unselected="PeripheralDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="HeadsetLBI" Content="Headset" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Headsetvisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="EnabledPeripheralClick" Unselected="PeripheralDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="SpeakersLBI" Content="Speakers" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Speakersrvisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="SpeakerSelected" Unselected="SpeakerDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="EthernetLBI" Content="Ethernet Cable" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Ethernetcablevisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="EnabledPeripheralClick" Unselected="PeripheralDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="USBLBI" Content="USB Cable" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Usbcablevisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="EnabledPeripheralClick" Unselected="PeripheralDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="VGALBI" Content="VGA Cable" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Vgacablevisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="EnabledPeripheralClick" Unselected="PeripheralDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="PowerLBI" Content="Power Strip" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Powerstripvisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="EnabledPeripheralClick" Unselected="PeripheralDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="TabletLBI" Content="Tablet" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Tabletvisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="TabletChargerRouterSelected" Unselected="TabletChargerRouterDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="ChargerLBI" Content="Tablet Charger" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Tabletchargervisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="TabletChargerRouterSelected" Unselected="TabletChargerRouterDeselected"></ListBoxItem>
                                        <ListBoxItem vm:Name="RouterLBI" Content="ECOT Router" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" Visibility="{Binding Routervisible, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Selected="TabletChargerRouterSelected" Unselected="TabletChargerRouterDeselected"></ListBoxItem>
                                    </ListBox>
                                    <DatePicker Name="BFDate" Grid.Row="1" Grid.Column="1" SelectedDateFormat="Short" DisplayDateStart="{vm:Static sys:DateTime.Now}" Margin="5,0,0,0" BorderThickness="0" IsEnabled="False"/>
                                    <ComboBox Name="StartTime" Grid.Row="2" Grid.Column="1" Height="25" VerticalAlignment="Top" Margin="5,5,0,0" BorderThickness="0" IsEnabled="False">
                                        <ComboBoxItem Content="Start Time" HorizontalAlignment="Center" IsSelected="True"></ComboBoxItem>
                                        <ComboBoxItem Content="6:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="7:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="8:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="9:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="10:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="11:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="12:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="1:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="2:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="3:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="4:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="5:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="6:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                    </ComboBox>
                                    <ComboBox Name="StopTime" Grid.Row="3" Grid.Column="1" Height="25" VerticalAlignment="Top" Margin="5,5,0,0" BorderThickness="0" IsEnabled="False">
                                        <ComboBoxItem Content="Stop Time" HorizontalAlignment="Center" IsSelected="True"></ComboBoxItem>
                                        <ComboBoxItem Content="6:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="7:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="8:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="9:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="10:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="11:00 AM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="12:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="1:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="2:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="3:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="4:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="5:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                        <ComboBoxItem Content="6:00 PM" HorizontalAlignment="Center"></ComboBoxItem>
                                    </ComboBox>
                                    <TextBox Name="BFShipment" Grid.Row="4" Grid.Column="1" Height="25" controls:TextBoxHelper.Watermark="Shipment ID" VerticalAlignment="Top" Margin="5,5,0,0" BorderThickness="0" Width="110" IsEnabled="False"/>
                                    <TextBox Name="BFAddy" Text="{Binding BFAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="5" Grid.Column="1" Height="25" controls:TextBoxHelper.Watermark="Address" ToolTip="Simply typing ''V'' or ''v'' will result in ''Address: Verified in CRM''" VerticalAlignment="Bottom" Margin="5,5,0,0" BorderThickness="0" Width="110" IsEnabled="False">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus" >
                                                <i:InvokeCommandAction Command="{Binding ReplaceBGAddressCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox Name="BFNumber" Text="{Binding BFPhone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="6" Grid.Column="1" Height="25" controls:TextBoxHelper.Watermark="Phone Number" VerticalAlignment="Bottom" Margin="5,5,0,0" BorderThickness="0" Width="110" PreviewTextInput="Phoneregex" IsEnabled="False">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus" >
                                                <i:InvokeCommandAction Command="{Binding FormatBFPhoneCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox Name="BFAsset" Grid.Row="7" Grid.Column="1" Height="25" controls:TextBoxHelper.Watermark="Asset Tag" VerticalAlignment="Bottom" Margin="5,5,0,0" BorderThickness="0" Width="110" IsEnabled="False"/>
                                    <TextBox Name="BFModel" Grid.Row="8" Grid.Column="1" Height="25" controls:TextBoxHelper.Watermark="Model" VerticalAlignment="Bottom" Margin="5,5,0,0" BorderThickness="0" Width="110" IsEnabled="False"/>
                                    <TextBox Name="BFSerial" Grid.Row="9" Grid.Column="1" Height="25" controls:TextBoxHelper.Watermark="Serial #" VerticalContentAlignment="Bottom" Margin="5,5,0,0" BorderThickness="0" Width="110" IsEnabled="False"/>
                                    <Button Grid.Row="10" Grid.Column="0" Content="Create AR" Click="CompileBF"></Button>

                                </Grid>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Curriculum" HorizontalContentAlignment="Left">
                            <ScrollViewer HorizontalAlignment="Left" VerticalAlignment="Top" Width="auto" >
                                <Grid Height="Auto" Width="auto">
                                    <Rectangle Height="2" Width="auto" VerticalAlignment="Top" StrokeThickness="2" Stroke="White"/>
                                    <StackPanel Margin="0,15,0,0">
                                        <RadioButton vm:Name="ClassContentRadio" Content="Class Content, Gradebook or Dashboard" Command="{Binding CurriculumARCommand}" IsChecked="{Binding ClassContentChecked, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                        <RadioButton vm:Name="MessageCenterRadio" Content="Message Center/Class Announcments" Command="{Binding CurriculumARCommand}" IsChecked="{Binding MCCAChecked, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                        <RadioButton vm:Name="AuxilarySiteRadio" Content="Auxilary Site Content" Command="{Binding CurriculumARCommand}" IsChecked="{Binding AuxSiteChecked, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                        <RadioButton vm:Name="AuxilarySiteAccountRadio" Content="Auxilary Site Account Issues" Command="{Binding CurriculumARCommand}" IsChecked="{Binding AuxAccountChecked, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                        <RadioButton vm:Name="DiscussionBoardRadio" Content="Discussion Board" Command="{Binding CurriculumARCommand}" IsChecked="{Binding DiscBoardChecked, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                        <Grid vm:Name="ClassContentGrid" Margin="0,10,0,0" Visibility="{Binding CCGridVisibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Width="270" Text="{Binding CCURL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Class or Gradebook URL" Margin="0,0,0,0"/>
                                            <TextBox Width="270" Text="{Binding CCName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Teacher Name (First Name and Last Name)" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding CCBrowser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Browser Version (If using a Home PC)" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding CCPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Path" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding CCFinal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="4" Grid.ColumnSpan="3" Height="75" Grid.Column="0" controls:TextBoxHelper.Watermark="Hit 'Create AR' to preview the AR here..." Margin="0,5,0,0" IsEnabled="{Binding CCFinalEnabled, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding CreateCCCommand}" Grid.Row="5" Grid.Column="0" Margin="0,20,0,0" Content="Create AR"/>
                                            <Button Command="{Binding AddCCCommand}" Grid.Row="5" Grid.Column="1" Margin="0,20,0,0" Content="Add to notes" IsEnabled="{Binding CCAddEnabled, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding ResetCCCommand}" Grid.Row="5" Grid.Column="2" Margin="0,20,0,0" Content="Reset"/>
                                            <TextBlock Grid.Row="6" Grid.ColumnSpan="3" Margin="0,20,0,0"><Run Text="AR Types:"/></TextBlock>
                                            <TextBlock Grid.Row="7" Grid.ColumnSpan="3" TextWrapping="Wrap" Width="270"><Run Text="Curriculum &gt; Student &gt; Course Material &gt; Assignment &gt; Dropbox"/></TextBlock>
                                            <TextBlock Grid.Row="8" Grid.ColumnSpan="3" TextWrapping="Wrap" Width="270"><Run Text="Curriculum &gt; Student &gt; Course Material &gt; Other"/></TextBlock>
                                            <TextBlock Grid.Row="9" Grid.ColumnSpan="3" TextWrapping="Wrap" Width="270"><Run Text="Curriculum &gt; Student &gt; Gradebook"/></TextBlock>

                                        </Grid>
                                        <Grid vm:Name="MessageCenterGrid" Margin="0,10,0,0" Visibility="{Binding MCGridVisibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Width="270" Text="{Binding MCURL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Class URL" Margin="0,0,0,0"/>
                                            <TextBox Width="270" Text="{Binding MCName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Teacher Name (First Name and Last Name)" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding MCSubject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Subject (Title) of Message or Announcement" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding MCDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Date/Time of Message or Announcement" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding MCFinal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="4" Grid.ColumnSpan="3" Height="75" Grid.Column="0" controls:TextBoxHelper.Watermark="Hit 'Create AR' to preview the AR here..." Margin="0,5,0,0" IsEnabled="{Binding MCFinalEnabled, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding CreateMCCommand}" Grid.Row="5" Grid.Column="0" Margin="0,20,0,0" Content="Create AR"/>
                                            <Button Command="{Binding AddMCCommand}" Grid.Row="5" Grid.Column="1" Margin="0,20,0,0" Content="Add to notes" IsEnabled="{Binding MCAddEnabled, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding ResetMCCommand}" Grid.Row="5" Grid.Column="2" Margin="0,20,0,0" Content="Reset"/>
                                            <TextBlock Grid.Row="6" Grid.ColumnSpan="3" Margin="0,20,0,0"><Run Text="AR Types:"/></TextBlock>
                                            <TextBlock Grid.Row="7" Grid.ColumnSpan="3" TextWrapping="Wrap" Width="270"><Run Text="Curriculum > Student > Homeroom > Message Center"/></TextBlock>
                                            <TextBlock Grid.Row="8" Grid.ColumnSpan="3" TextWrapping="Wrap" Width="270"><Run Text="Curriculum > Student > Course Material > Other"/></TextBlock>

                                        </Grid>
                                        <Grid vm:Name="AuxSiteGrid" Margin="0,10,0,0" Visibility="{Binding AuxGridVisibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Width="270" Text="{Binding AuxURL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Class URL" Margin="0,0,0,0"/>
                                            <TextBox Width="270" Text="{Binding AuxName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Teacher Name (First Name and Last Name)" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding AuxBrowser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Browser Version (If using a Home PC)" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding AuxSite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Site URL/Program Name" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding AuxPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Path to Issue on Site (Be Specific)" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding AuxCBR, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Best Contact Phone Number" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding AuxFinal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="6" Grid.ColumnSpan="3" Height="75" Grid.Column="0" controls:TextBoxHelper.Watermark="Hit 'Create AR' to preview the AR here..." Margin="0,5,0,0" IsEnabled="{Binding AuxFinalEnabled, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding CreateAuxCommand}" Grid.Row="7" Grid.Column="0" Margin="0,20,0,0" Content="Create AR"/>
                                            <Button Command="{Binding AddAuxCommand}" Grid.Row="7" Grid.Column="1" Margin="0,20,0,0" Content="Add to notes" IsEnabled="{Binding AuxAddEnabled, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding ResetAuxCommand}" Grid.Row="7" Grid.Column="2" Margin="0,20,0,0" Content="Reset"/>
                                            <TextBlock Grid.Row="8" Grid.ColumnSpan="3" Margin="0,20,0,0"><Run Text="AR Types:"/></TextBlock>
                                            <TextBlock Grid.Row="9" Grid.ColumnSpan="3" TextWrapping="Wrap" Width="270"><Run Text="Curriculum > Student > External Website > Other"/></TextBlock>
                                            <TextBlock Grid.Row="10" Grid.ColumnSpan="3" TextWrapping="Wrap" Width="270"><Run Text="Curriculum > Student > External Website > Study Island"/></TextBlock>

                                        </Grid>
                                        <Grid vm:Name="AccountGrid" Margin="0,10,0,0" Visibility="{Binding AccountGridVisibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Width="270" Text="{Binding AccountURL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Site URL/Program Name" Margin="0,0,0,0"/>
                                            <TextBox Width="270" Text="{Binding AccountName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Username/Password tested" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding AccountCBR, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Best Contact Phone Number" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding AccountFinal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Grid.ColumnSpan="3" Height="75" Grid.Column="0" controls:TextBoxHelper.Watermark="Hit 'Create AR' to preview the AR here..." Margin="0,5,0,0" IsEnabled="{Binding AccountFinalEnabled, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding CreateAccountCommand}" Grid.Row="4" Grid.Column="0" Margin="0,20,0,0" Content="Create AR"/>
                                            <Button Command="{Binding AddAccountCommand}" Grid.Row="4" Grid.Column="1" Margin="0,20,0,0" Content="Add to notes" IsEnabled="{Binding AccountAddEnabled, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding ResetAccountCommand}" Grid.Row="4" Grid.Column="2" Margin="0,20,0,0" Content="Reset"/>
                                            <TextBlock Grid.Row="5" Grid.ColumnSpan="3" Margin="0,20,0,0"><Run Text="AR Types:"/></TextBlock>
                                            <TextBlock Grid.Row="6" Grid.ColumnSpan="3" TextWrapping="Wrap" Width="270"><Run Text="Curriculum > Student > External Website > Other"/></TextBlock>
                                            <TextBlock Grid.Row="7" Grid.ColumnSpan="3" TextWrapping="Wrap" Width="270"><Run Text="Curriculum > Student > External Website > Study Island"/></TextBlock>

                                        </Grid>

                                        <Grid vm:Name="DiscGrid" Margin="0,10,0,0" Visibility="{Binding DiscGridVisibility, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Width="270" Text="{Binding DiscURL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Class or Gradebook URL" Margin="0,0,0,0"/>
                                            <TextBox Width="270" Text="{Binding DiscName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Teacher Name (First Name and Last Name)" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding DiscBrowser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Browser Version (If using a Home PC)" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding DiscPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" controls:TextBoxHelper.Watermark="Path" Margin="0,5,0,0"/>
                                            <TextBox Width="270" Text="{Binding DiscFinal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="4" Grid.ColumnSpan="3" Height="75" Grid.Column="0" controls:TextBoxHelper.Watermark="Hit 'Create AR' to preview the AR here..." Margin="0,5,0,0" IsEnabled="{Binding DiscFinalEnabled, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding CreateDiscCommand}" Grid.Row="5" Grid.Column="0" Margin="0,20,0,0" Content="Create AR"/>
                                            <Button Command="{Binding AddDiscCommand}" Grid.Row="5" Grid.Column="1" Margin="0,20,0,0" Content="Add to notes" IsEnabled="{Binding DiscAddEnabled, Mode=TwoWay, Source={vm:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding ResetDiscCommand}" Grid.Row="5" Grid.Column="2" Margin="0,20,0,0" Content="Reset"/>
                                            <TextBlock Grid.Row="6" Grid.ColumnSpan="3" Margin="0,20,0,0"><Run Text="AR Types:"/></TextBlock>
                                            <TextBlock Grid.Row="7" Grid.ColumnSpan="3" TextWrapping="Wrap" Width="270"><Run Text="Curriculum &gt; Student &gt; Course Material &gt; Other"/></TextBlock>
                                        </Grid>
                                    </StackPanel>
                                </Grid>
                            </ScrollViewer>
                        </TabItem>
                    </TabControl>
                </Grid>
            </controls:MetroTabItem>
            <!--<TabItem Header="Templates" VerticalAlignment="Top">
            <Grid MinWidth="400">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="140"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                    <Button Content="New"/>
                    <Button Content="Save"/>
                    <Button Content="Delete"/>
                </StackPanel>
                <ListView Grid.Row="1" Grid.Column="0"/>
                <TextBox Grid.Row="1" Grid.Column="1"/>
            </Grid>
        </TabItem>-->
        </controls:MetroTabControl>
        <Grid HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="150" Margin="60,-10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label Content="Deployment" FontSize="10" Grid.Column="0" Padding="5,0"/>
            <Label Content="{Binding AppMode, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="0" FontSize="10" Padding="5,0"/>
            <Label Content="Version" Grid.Column="0" Grid.Row="1" FontSize="10" Padding="5,0"/>
            <Label Content="{Binding PublishVersion, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" FontSize="10" Padding="5,0"/>
            <Label Content="Assembly" Grid.Column="0" Grid.Row="2" FontSize="10" Padding="5,0"/>
            <Label Content="{Binding AssemblyVersion, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="2" FontSize="10" Padding="5,0"/>
        </Grid>
    </Grid>
</UserControl>
